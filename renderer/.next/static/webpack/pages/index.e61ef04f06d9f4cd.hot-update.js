/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./utils/notifications.ts":
/*!********************************!*\
  !*** ./utils/notifications.ts ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const notification = ()=>{\n    const NOTIFICATION_TITLE = \"Your change has already saved\";\n    const NOTIFICATION_BODY = \"Notification from the Renderer process\";\n    const CLICK_MESSAGE = \"Pinch Stack\";\n    new window.Notification(NOTIFICATION_TITLE, {\n        body: NOTIFICATION_BODY\n    }).onclick = ()=>{\n        document.getElementById(\"output\").innerText = CLICK_MESSAGE;\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9ub3RpZmljYXRpb25zLnRzIiwibWFwcGluZ3MiOiJBQUVBLE1BQU1BLGVBQWU7SUFDbkIsTUFBTUMscUJBQXFCO0lBQzNCLE1BQU1DLG9CQUFvQjtJQUMxQixNQUFNQyxnQkFBZ0I7SUFFdEIsSUFBSUMsT0FBT0MsWUFBWSxDQUFDSixvQkFBb0I7UUFBRUssTUFBTUo7SUFBa0IsR0FBR0ssT0FBTyxHQUFHO1FBQ2pGQyxTQUFTQyxjQUFjLENBQUMsVUFBVUMsU0FBUyxHQUFHUDtJQUNoRDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL25vdGlmaWNhdGlvbnMudHM/OWQ5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmNvbnN0IG5vdGlmaWNhdGlvbiA9ICgpID0+IHtcclxuICBjb25zdCBOT1RJRklDQVRJT05fVElUTEUgPSAnWW91ciBjaGFuZ2UgaGFzIGFscmVhZHkgc2F2ZWQnXHJcbiAgY29uc3QgTk9USUZJQ0FUSU9OX0JPRFkgPSAnTm90aWZpY2F0aW9uIGZyb20gdGhlIFJlbmRlcmVyIHByb2Nlc3MnXHJcbiAgY29uc3QgQ0xJQ0tfTUVTU0FHRSA9ICdQaW5jaCBTdGFjaydcclxuXHJcbiAgbmV3IHdpbmRvdy5Ob3RpZmljYXRpb24oTk9USUZJQ0FUSU9OX1RJVExFLCB7IGJvZHk6IE5PVElGSUNBVElPTl9CT0RZIH0pLm9uY2xpY2sgPSAoKSA9PiB7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnb3V0cHV0JykuaW5uZXJUZXh0ID0gQ0xJQ0tfTUVTU0FHRVxyXG4gIH1cclxufVxyXG5cclxuIl0sIm5hbWVzIjpbIm5vdGlmaWNhdGlvbiIsIk5PVElGSUNBVElPTl9USVRMRSIsIk5PVElGSUNBVElPTl9CT0RZIiwiQ0xJQ0tfTUVTU0FHRSIsIndpbmRvdyIsIk5vdGlmaWNhdGlvbiIsImJvZHkiLCJvbmNsaWNrIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVyVGV4dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/notifications.ts\n"));

/***/ })

});